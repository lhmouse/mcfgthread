name: CI

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - master
      - releases/*

  pull_request:
    branches:
      - master

jobs:
  ubuntu-x86-64:
    name: Ubuntu cross build (x86-64 GCC; Wine)
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: >-
             sudo apt-get update ;
             sudo apt-get purge mono-runtime ;
             sudo apt-get install -y --no-install-recommends
             mingw-w64-{x86-64-dev,tools} {gcc,g++,binutils}-mingw-w64-x86-64
             ninja-build python3-pip wine wine-binfmt &&
             sudo PIP_BREAK_SYSTEM_PACKAGES=1 pip3 install meson

      - name: Configure
        run: >-
             meson setup --cross-file cross/gcc.x86_64-w64-mingw32
             -Denable-debug-checks=true -Doptimization=1 build_ci

      - name: Build
        run: meson compile -Cbuild_ci

      - name: Run tests
        run: meson test -t15 -Cbuild_ci --print-errorlogs

  ubuntu-arm64:
    name: Ubuntu cross build (ARM64 Clang; Wine)
    runs-on: ubuntu-22.04-arm

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: >-
             sudo apt-get update ;
             sudo apt-get purge mono-runtime ;
             sudo apt-get install -y --no-install-recommends
             wget ninja-build python3-pip wine wine-binfmt &&
             sudo PIP_BREAK_SYSTEM_PACKAGES=1 pip3 install meson

      - name: Download llvm-mingw
        run: >-
             wget 'https://github.com/mstorsjo/llvm-mingw/releases/download/20250430/llvm-mingw-20250430-ucrt-ubuntu-22.04-aarch64.tar.xz' &&
             tar -xaf llvm-mingw-20250430-ucrt-ubuntu-22.04-aarch64.tar.xz &&
             readlink -fe llvm-mingw-20250430-ucrt-ubuntu-22.04-aarch64/bin | tee -a "${GITHUB_PATH}"

      - name: Configure
        run: >-
             meson setup --cross-file cross/llvm.aarch64-w64-mingw32
             -Denable-debug-checks=true -Doptimization=1 build_ci

      - name: Build
        run:  meson compile -Cbuild_ci

      - name: Run tests
        run: meson test -t20 -Cbuild_ci --print-errorlogs

  msys2-ucrt64:
    name: MSYS2 native build (x86-64 GCC)
    runs-on: windows-2022

    defaults:
      run: { shell: 'msys2 {0}' }

    steps:
      - uses: actions/checkout@v4

      - uses: msys2/setup-msys2@v2
        with: { msystem: UCRT64 }

      - name: Install dependencies
        run: >-
             pacman -Sy ;
             pacman -S --needed --noconfirm
             mingw-w64-ucrt-x86_64-{{headers,crt,tools}-git,gcc,meson}

      - name: Configure
        run: >-
             meson setup -Denable-debug-checks=true -Doptimization=1 build_ci

      - name: Build
        run: meson compile -Cbuild_ci

      - name: Run tests
        run: meson test -t2 -Cbuild_ci --print-errorlogs

  msys2-mingw32:
    name: MSYS2 native build (x86-32 GCC)
    runs-on: windows-2022

    defaults:
      run: { shell: 'msys2 {0}' }

    steps:
      - uses: actions/checkout@v4

      - uses: msys2/setup-msys2@v2
        with: { msystem: MINGW32 }

      - name: Install dependencies
        run: >-
             pacman -Sy ;
             pacman -S --needed --noconfirm
             mingw-w64-i686-{{headers,crt,tools}-git,gcc,meson,ninja}

      - name: Configure
        run: >-
             meson setup -Denable-debug-checks=true -Doptimization=1 build_ci

      - name: Build
        run: meson compile -Cbuild_ci

      - name: Run tests
        run: meson test -t2 -Cbuild_ci --print-errorlogs

  msys2-clang64:
    name: MSYS2 native build (x86-64 Clang)
    runs-on: windows-2022

    defaults:
      run: { shell: 'msys2 {0}' }

    steps:
      - uses: actions/checkout@v4

      - uses: msys2/setup-msys2@v2
        with: { msystem: CLANG64 }

      - name: Install dependencies
        run: >-
             pacman -Sy ;
             pacman -S --needed --noconfirm
             mingw-w64-clang-x86_64-{{headers,crt,tools}-git,clang,meson,ninja}

      - name: Configure
        run: >-
             meson setup -Denable-debug-checks=true -Doptimization=1 build_ci

      - name: Build
        run: meson compile -Cbuild_ci

      - name: Run tests
        run: meson test -t2 -Cbuild_ci --print-errorlogs

  msys2-arm64:
    name: MSYS2 native build (ARM64 Clang)
    runs-on: windows-11-arm

    defaults:
      run: { shell: 'msys2 {0}' }

    steps:
      - uses: actions/checkout@v4

      - uses: msys2/setup-msys2@v2
        with: { msystem: CLANGARM64 }

      - name: Install dependencies
        run: >-
             pacman -Sy ;
             pacman -S --needed --noconfirm
             mingw-w64-clang-aarch64-{{headers,crt,tools}-git,clang,meson,ninja}

      - name: Configure
        run: >-
             meson setup -Denable-debug-checks=true -Doptimization=1 build_ci

      - name: Build
        run: meson compile -Cbuild_ci

      - name: Run tests
        run: meson test -t2 -Cbuild_ci --print-errorlogs

  llvm-x64:
    name: LLVM native build (x86-64 Clang)
    runs-on: windows-2022

    defaults:
      run: { shell: pwsh }

    steps:
      - uses: actions/checkout@v4

      - uses: ilammy/msvc-dev-cmd@v1
        with: { arch: amd64 }

      - name: Install dependencies
        run: >-
             pip3 install --break-system-packages meson

      - name: Configure
        run: >-
             meson setup --native-file cross/llvm.x86_64-pc-windows-msvc
             -Denable-debug-checks=true -Doptimization=1 build_ci

      - name: Build
        run: meson compile -Cbuild_ci

      - name: Run tests
        run: meson test -t2 -Cbuild_ci --print-errorlogs

  llvm-x86:
    name: LLVM native build (x86-32 Clang)
    runs-on: windows-2022

    defaults:
      run: { shell: pwsh }

    steps:
      - uses: actions/checkout@v4

      - uses: ilammy/msvc-dev-cmd@v1
        with: { arch: x86 }

      - name: Install dependencies
        run: >-
             pip3 install --break-system-packages meson

      - name: Configure
        run: >-
             meson setup --native-file cross/llvm.i686-pc-windows-msvc
             -Denable-debug-checks=true -Doptimization=1 build_ci

      - name: Build
        run: meson compile -Cbuild_ci

      - name: Run tests
        run: meson test -t2 -Cbuild_ci --print-errorlogs

  llvm-arm64:
    name: LLVM native build (ARM64 Clang)
    runs-on: windows-11-arm

    defaults:
      run: { shell: pwsh }

    steps:
      - uses: actions/checkout@v4

      - uses: ilammy/msvc-dev-cmd@v1
        with: { arch: arm64 }

      - name: Install dependencies
        run: >-
             pip3 install --break-system-packages meson

      - name: Configure
        run: >-
             meson setup --native-file cross/llvm.aarch64-pc-windows-msvc
             -Denable-debug-checks=true -Doptimization=1 build_ci

      - name: Build
        run: meson compile -Cbuild_ci

      - name: Run tests
        run: meson test -t2 -Cbuild_ci --print-errorlogs

  llvm-arm64ec:
    name: LLVM native build (ARM64EC Clang)
    runs-on: windows-11-arm

    defaults:
      run: { shell: pwsh }

    steps:
      - uses: actions/checkout@v4

      - uses: ilammy/msvc-dev-cmd@v1
        with: { arch: arm64 }

      - name: Install dependencies
        run: >-
             pip3 install --break-system-packages meson

      - name: Download LLVM
        run: >-
             curl.exe -LO "https://github.com/llvm/llvm-project/releases/download/llvmorg-20.1.8/clang+llvm-20.1.8-aarch64-pc-windows-msvc.tar.xz" &&
             tar -xaf clang+llvm-20.1.8-aarch64-pc-windows-msvc.tar.xz &&
             cvpa clang+llvm-20.1.8-aarch64-pc-windows-msvc/bin | tee -a "${env:GITHUB_PATH}"

      - name: Configure
        run: >-
             meson setup --native-file cross/llvm.arm64ec-pc-windows-msvc
             -Denable-debug-checks=true -Doptimization=1 build_ci

      - name: Build
        run: meson compile -Cbuild_ci

      - name: Run tests
        run: meson test -t2 -Cbuild_ci --print-errorlogs
